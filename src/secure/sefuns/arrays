/// @addtogroup sefun
/// @{
/// @file arrays
/// @brief simul_efuns for array manipulations
/// based on deadsouls
/// @author Gwenhwyvar
/// @version 0.0.0
/// @date 2016-01-24

// --------------------------------------------------------------------------
/// @brief scramble_array 
/// @Param arr
/// @Returns copy of arr in random order
// --------------------------------------------------------------------------
public mixed *scramble_array(mixed *arr)
{
    return sort_array(copy(arr), (: random(3) - 1 :) );
}

// --------------------------------------------------------------------------
/// @brief distinct_array 
/// @Param arr
/// @Returns - copy of arr with duplicates removed
// --------------------------------------------------------------------------
public mixed *distinct_array(mixed *arr)
{
    int     i   = sizeof(arr) - 1;
    mapping tmp = allocate_mapping(i + 1);

    for(; i >= 0;)
        tmp[arr[i--]] = 1;
    return keys(tmp);
}

// --------------------------------------------------------------------------
/// @brief remove_member 
/// @Param arr
/// @Param i
/// @Returns - copy of arr with it's ith member removed
// --------------------------------------------------------------------------
public mixed *remove_member(mixed *arr, int i)
{
    return arr[0..(i - 1)] + arr[(i + 1)..];
}
///  @}
